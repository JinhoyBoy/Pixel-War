services:
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./backend/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - backend

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pixelwar
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pixelwar"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  pixel_service:
    image: pixel_service_image
    depends_on:
      - redis
      - postgres
    env_file:
      - ./backend/pixel_service/.env
    ports:
      - "8000:8000"
    #deploy:
    #  replicas: 3
    #  restart_policy:
    #    condition: on-failure
    networks:
      - backend
      - frontend

  event_service:
    image: event_service_image
    depends_on:
      - redis
    ports:
      - "8001:8001"
    #deploy:
    #  replicas: 3
    #  restart_policy:
    #    condition: on-failure
    networks:
      - backend
      - frontend

  frontend:
    image: frontend_image
    ports:
      - "3000:3000"
    depends_on:
      - pixel_service
      - event_service
    environment:
      - NODE_ENV=production

volumes:
  postgres_data:

networks:
  backend:
  frontend: